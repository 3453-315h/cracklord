# This configuration file will allow the use of Amazon Web Services hosts for 
# processing of jobs, including cracking, CPU, etc.  Note that although traffic
# between the resource and queue is encrypted, you are using a cloud based 
# service, it is your responsibility to ensure your data is protected.
[General]
# This is the ID of the access key in the authentication area of AWS
AccessKeyID=
# The key will also include a secret portion that will be necessary
SecretAccessKey=

# The region where you would like your instances to be started 
Region=us-west-2

# We also need to define the ID of the AMI that we would like to deploy for 
# the instances we create.  The default is an AMI created with a basic resource
# server, and some basic tools configured.  Customized instances should be used
# for more complex installations. The default comes with no warranty, license,
# or support.  Please see LICENSE.txt in the root of the source code for more info.
AMIID=

# This is the name of the security group you would like to use for all of your
# CrackLord AMI instances.  If this does not exist, the resource manager will
# create the security group with an inbound rule that allows port 9443/tcp from
# 0.0.0.0/0.  There is a risk allowing connections from the entire Internet, you
# should consider creating your own.  It must at least allow 9443/tcp from the 
# IP of your queue server or they will be unable to connect. 
SecurityGroupName=cracklord-security-1

# If you would like to use a specific VPC, please uncomment and specify the 
# ID here.  If this is left commented, then by default the plugin will enumerate
# the default VPC and put all of the cracklord hosts there. 
#VPCID=

# This section includes a list of all instance types that you would like end users
# to have access to.  These must be compatible with the AMI that you are using.
# The format is the ID of the instance in AWS, an =, and then the name you'd like
# to present to users when they are creating a new instance: g2.2xlarge=Large GPU
# The following defaults include two GPU instances, one CPU instance, and a 
# small instance that is suitable for testing purposes. 
[InstanceTypes]
g2.2xlarge=Single GPU Instance
g2.8xlarge=Quad GPU Instance
c4.large=Compute Optimized Instance
t2.micro=Small Instance (Minimal Resources)